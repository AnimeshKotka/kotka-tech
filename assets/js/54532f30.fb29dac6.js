"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[129],{5185:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"AWS-Solutions-Associate-Architect-Associate/IAM","title":"Identity & Access Management-IAM","description":"- Global Service (IAM entities like roles can be used in any region without recreation)","source":"@site/docs/AWS-Solutions-Associate-Architect-Associate/IAM.mdx","sourceDirName":"AWS-Solutions-Associate-Architect-Associate","slug":"/AWS-Solutions-Associate-Architect-Associate/IAM","permalink":"/kotka-tech/docs/AWS-Solutions-Associate-Architect-Associate/IAM","draft":false,"unlisted":false,"editUrl":"https://github.com/AnimeshKotka/kotka-tech/tree/main/docs/AWS-Solutions-Associate-Architect-Associate/IAM.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Identity & Access Management-IAM","sidebar_position":2,"toc_min_heading_level":2,"toc_max_heading_level":6},"sidebar":"tutorialSidebar","previous":{"title":"Intro to AWS","permalink":"/kotka-tech/docs/AWS-Solutions-Associate-Architect-Associate/intro"},"next":{"title":"Elastic Compute Cloud (EC2)","permalink":"/kotka-tech/docs/category/elastic-compute-cloud-ec2"}}');var t=s(4848),l=s(8453),o=s(4252);const r={title:"Identity & Access Management-IAM",sidebar_position:2,toc_min_heading_level:2,toc_max_heading_level:6},c=void 0,a={},d=[{value:"Users &amp; Groups",id:"users--groups",level:2},{value:"Policies",id:"policies",level:2},{value:"Trust Policies",id:"trust-policies",level:3},{value:"Roles",id:"roles",level:2},{value:"Protect IAM Accounts",id:"protect-iam-accounts",level:2},{value:"Guidelines",id:"guidelines",level:2},{value:"Policy Simulator",id:"policy-simulator",level:2},{value:"Permission Boundaries",id:"permission-boundaries",level:2},{value:"Assume Role vs Resource-based Policy",id:"assume-role-vs-resource-based-policy",level:2},{value:"Examples",id:"examples",level:2},{value:"Convert into JSON",id:"convert-into-json",level:3},{value:"Create AWS s3 policy",id:"create-aws-s3-policy",level:3},{value:"Attach user policy",id:"attach-user-policy",level:3}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.A,{toc:d,minHeadingLevel:2,maxHeadingLevel:6}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Global Service (IAM entities like roles can be used in any region without recreation)"}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"IAM Query API can be used to make direct calls to the IAM web service (using access key ID and secret access key for authentication)"})}),"\n",(0,t.jsx)(n.h2,{id:"users--groups",children:"Users & Groups"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Groups are collections of users and have policies attached to them"}),"\n",(0,t.jsx)(n.li,{children:"Groups cannot be nested"}),"\n",(0,t.jsx)(n.li,{children:"User can belong to multiple groups"}),"\n",(0,t.jsx)(n.li,{children:"User doesn't have to belong to a group"}),"\n",(0,t.jsx)(n.li,{children:"Root User has full access to the account"}),"\n",(0,t.jsx)(n.li,{children:"IAM User has limited permission to the account"}),"\n",(0,t.jsx)(n.li,{children:"You should log in as an IAM user with admin access even if you have root access. This is just to be sure that nothing goes wrong by accident."}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"An IAM Group is not an identity and cannot be identified as a principal in an IAM policy"}),"\n",(0,t.jsx)(n.li,{children:"Only users and services can assume a role (not groups)"}),"\n",(0,t.jsx)(n.li,{children:"A new IAM user created using the AWS CLI or AWS API has no AWS credentials"}),"\n"]})}),"\n",(0,t.jsx)(n.h2,{id:"policies",children:"Policies"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Policies are JSON documents that outline permissions for users, groups or roles"}),"\n",(0,t.jsxs)(n.li,{children:["Two types","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["User based policies","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"IAM policies define which API calls should be allowed for a specific user"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Resource based policies","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Control access to an AWS resource"}),"\n",(0,t.jsx)(n.li,{children:"Grant the specified principal permission to perform actions on the resource and define under what conditions this applies"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"An IAM principal can access a resource if the user policy ALLOWS it OR the resource policy ALLOWS it AND there\u2019s no explicit DENY."}),"\n",(0,t.jsx)(n.li,{children:"Policies assigned to a user are called inline policies"}),"\n",(0,t.jsx)(n.li,{children:"Follow least privilege principle for IAM Policies"}),"\n",(0,t.jsx)(n.li,{children:"Policy Structure"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"IAM service",src:s(5124).A+"",width:"1920",height:"921"})}),"\n",(0,t.jsx)(n.h3,{id:"trust-policies",children:"Trust Policies"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Defines which principal entities (accounts, users, roles, federated users) can assume the role"}),"\n",(0,t.jsx)(n.li,{children:"An IAM role is both an identity and a resource that supports resource-based policies."}),"\n",(0,t.jsx)(n.li,{children:"You must attach both a trust policy and an identity-based policy to an IAM role."}),"\n",(0,t.jsx)(n.li,{children:"The IAM service supports only one type of resource-based policy called a role trust policy, which is attached to an IAM role."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"roles",children:"Roles"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Collection of policies for AWS services"}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"If you are going to use an IAM Service Role with Amazon EC2 or another AWS service that uses Amazon EC2, you must store the role in an instance profile.\nWhen you create an IAM service role for EC2, the role automatically has EC2 identified as a trusted entity."})}),"\n",(0,t.jsx)(n.h2,{id:"protect-iam-accounts",children:"Protect IAM Accounts"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Password Policy","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Used to enforce standards for password","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"password rotation"}),"\n",(0,t.jsx)(n.li,{children:"password reuse"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Prevents brute force attack"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Multi Factor Authentication (MFA)","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Both root user and IAM users should use MFA"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"guidelines",children:"Guidelines"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Use root account only for account setup"}),"\n",(0,t.jsx)(n.li,{children:"1 physical user = 1 IAM user"}),"\n",(0,t.jsx)(n.li,{children:"Enforce MFA for both root and IAM users"}),"\n",(0,t.jsx)(n.li,{children:"Never share IAM credentials & Access Keys"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"policy-simulator",children:"Policy Simulator"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Online tool that allows us to check what API calls an IAM User, Group or Role is allowed to perform based on the permissions they have."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"permission-boundaries",children:"Permission Boundaries"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Set the maximum permissions an IAM entity can get"}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Can be applied to users and roles (not groups)"})}),"\n",(0,t.jsx)(n.li,{children:"Used to ensure some users can\u2019t escalate their privileges (make themselves admin)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"assume-role-vs-resource-based-policy",children:"Assume Role vs Resource-based Policy"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"When you assume an IAM Role, you give up your original permissions and take the permissions assigned to the role"}),"\n",(0,t.jsx)(n.li,{children:"When using a resource based policy, the principal doesn\u2019t have to give up their permissions"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsxs)(n.p,{children:["Create ",(0,t.jsx)(n.code,{children:"policy.yaml"})," file and paste the below code:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'Version: "2012-10-17"\nStatement:\n  - Sid: "AccesstoS3"\n    Effect: "Allow"\n    Action: "S3:ListBucket"\n    Resource: "*"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"convert-into-json",children:"Convert into JSON"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"yq -o json policy.yaml > policy.json\n"})}),"\n",(0,t.jsx)(n.h3,{id:"create-aws-s3-policy",children:"Create AWS s3 policy"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'aws iam create-policy --policy-name aws-s3-all --policy-document "$(yq -o json policy.yaml)"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"attach-user-policy",children:"Attach user policy"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/attach-user-policy.html#examples",children:"official document"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"aws iam attach-user-policy \\\n--policy-arn arn:aws:iam::376129885533:policy/aws-s3-all \\\n--user-name sts-machine-user\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Copy the access key and secret here"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"aws configure\n"})}),"\n",(0,t.jsx)(n.p,{children:"Then edit credentials file to change away from default profile"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"open ~/.aws/credentials \n"})}),"\n",(0,t.jsx)(n.p,{children:"Test who you are:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"aws sts get-caller-identity\naws sts get-caller-identity --profile sts\n"})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},4252:(e,n,s)=>{s.d(n,{A:()=>o});s(6540);var i=s(5195);const t={tableOfContentsInline:"tableOfContentsInline_prmo"};var l=s(4848);function o(e){let{toc:n,minHeadingLevel:s,maxHeadingLevel:o}=e;return(0,l.jsx)("div",{className:t.tableOfContentsInline,children:(0,l.jsx)(i.A,{toc:n,minHeadingLevel:s,maxHeadingLevel:o,className:"table-of-contents",linkClassName:null})})}},5195:(e,n,s)=>{s.d(n,{A:()=>x});var i=s(6540),t=s(6342);function l(e){const n=e.map((e=>({...e,parentIndex:-1,children:[]}))),s=Array(7).fill(-1);n.forEach(((e,n)=>{const i=s.slice(2,e.level);e.parentIndex=Math.max(...i),s[e.level]=n}));const i=[];return n.forEach((e=>{const{parentIndex:s,...t}=e;s>=0?n[s].children.push(t):i.push(t)})),i}function o(e){let{toc:n,minHeadingLevel:s,maxHeadingLevel:i}=e;return n.flatMap((e=>{const n=o({toc:e.children,minHeadingLevel:s,maxHeadingLevel:i});return function(e){return e.level>=s&&e.level<=i}(e)?[{...e,children:n}]:n}))}function r(e){const n=e.getBoundingClientRect();return n.top===n.bottom?r(e.parentNode):n}function c(e,n){let{anchorTopOffset:s}=n;const i=e.find((e=>r(e).top>=s));if(i){return function(e){return e.top>0&&e.bottom<window.innerHeight/2}(r(i))?i:e[e.indexOf(i)-1]??null}return e[e.length-1]??null}function a(){const e=(0,i.useRef)(0),{navbar:{hideOnScroll:n}}=(0,t.p)();return(0,i.useEffect)((()=>{e.current=n?0:document.querySelector(".navbar").clientHeight}),[n]),e}function d(e){const n=(0,i.useRef)(void 0),s=a();(0,i.useEffect)((()=>{if(!e)return()=>{};const{linkClassName:i,linkActiveClassName:t,minHeadingLevel:l,maxHeadingLevel:o}=e;function r(){const e=function(e){return Array.from(document.getElementsByClassName(e))}(i),r=function(e){let{minHeadingLevel:n,maxHeadingLevel:s}=e;const i=[];for(let t=n;t<=s;t+=1)i.push(`h${t}.anchor`);return Array.from(document.querySelectorAll(i.join()))}({minHeadingLevel:l,maxHeadingLevel:o}),a=c(r,{anchorTopOffset:s.current}),d=e.find((e=>a&&a.id===function(e){return decodeURIComponent(e.href.substring(e.href.indexOf("#")+1))}(e)));e.forEach((e=>{!function(e,s){s?(n.current&&n.current!==e&&n.current.classList.remove(t),e.classList.add(t),n.current=e):e.classList.remove(t)}(e,e===d)}))}return document.addEventListener("scroll",r),document.addEventListener("resize",r),r(),()=>{document.removeEventListener("scroll",r),document.removeEventListener("resize",r)}}),[e,s])}var u=s(8774),h=s(4848);function m(e){let{toc:n,className:s,linkClassName:i,isChild:t}=e;return n.length?(0,h.jsx)("ul",{className:t?void 0:s,children:n.map((e=>(0,h.jsxs)("li",{children:[(0,h.jsx)(u.A,{to:`#${e.id}`,className:i??void 0,dangerouslySetInnerHTML:{__html:e.value}}),(0,h.jsx)(m,{isChild:!0,toc:e.children,className:s,linkClassName:i})]},e.id)))}):null}const p=i.memo(m);function x(e){let{toc:n,className:s="table-of-contents table-of-contents__left-border",linkClassName:r="table-of-contents__link",linkActiveClassName:c,minHeadingLevel:a,maxHeadingLevel:u,...m}=e;const x=(0,t.p)(),j=a??x.tableOfContents.minHeadingLevel,v=u??x.tableOfContents.maxHeadingLevel,A=function(e){let{toc:n,minHeadingLevel:s,maxHeadingLevel:t}=e;return(0,i.useMemo)((()=>o({toc:l(n),minHeadingLevel:s,maxHeadingLevel:t})),[n,s,t])}({toc:n,minHeadingLevel:j,maxHeadingLevel:v});return d((0,i.useMemo)((()=>{if(r&&c)return{linkClassName:r,linkActiveClassName:c,minHeadingLevel:j,maxHeadingLevel:v}}),[r,c,j,v])),(0,h.jsx)(p,{toc:A,className:s,linkClassName:r,...m})}},5124:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/iam-8e84ab5d6e95995a4c03167479a9012b.jpg"},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var i=s(6540);const t={},l=i.createContext(t);function o(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);